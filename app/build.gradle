apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'

apply plugin: 'io.fabric'

//FindBugs by Jenkins
apply plugin: 'findbugs'

apply plugin: 'checkstyle'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        applicationId "com.ciandt.sample.referenceapplication"
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 1
        versionName "1.0.0"

        resConfigs "en", "pt"

        // Enabling multidex support.
        multiDexEnabled true
    }

    signingConfigs {
        release {
            storeFile file('android_guidelines_key.jks')
            storePassword '123456'
            keyAlias 'android_guidelines_key_alias'
            keyPassword '123456789'
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            // TODO: Set your default log configuration for all buildTypes
            buildConfigField("int", "LOG_LEVEL", "4") // MyLog.LOG_LEVEL_DEBUG = 4;
            // TODO: Set your default host for all buildTypes
            buildConfigField("String", "DEFAULT_HOST", "\"api.parse.com/1\"")
        }

        stage {
            initWith(buildTypes.debug)

            applicationIdSuffix ".stage"
            buildConfigField("int", "LOG_LEVEL", "2") // MyLog.LOG_LEVEL_WARN = 2;
            buildConfigField("String", "DEFAULT_HOST", "\"api.parse.com/stage/1\"")
        }

        release {
            // TODO: enable resource shrinking
            shrinkResources true
            // TODO: enable code shrinking with ProGuard
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release

            buildConfigField("int", "LOG_LEVEL", "0") // MyLog.LOG_LEVEL_NONE = 0;
            buildConfigField("String", "DEFAULT_HOST", "\"api.parse.com/1\"")
        }
    }

    productFlavors {
        free {
            applicationId "com.ciandt.sample.referenceapplication.free"
            // TODO: anothers examples: set your analytics track id
            buildConfigField("String", "ANALYTICS_TRACK_ID", "\"UA-000000-01\"")
        }

        pro {
            applicationId "com.ciandt.sample.referenceapplication.pro"
            buildConfigField("String", "ANALYTICS_TRACK_ID", "\"UA-000000-02\"")

            // TODO: ProGuard rules specific for flavor pro
            //proguardFile 'some-other-rules.txt'
        }
    }

    lintOptions {
        // Don't abort if Lint finds an error, otherwise the Jenkins build
        // will be marked as failed, and Jenkins won't analyse the Lint output
        abortOnError false

        // TODO: lint disable options
        // turn off checking the given issue id's
        disable 'NewApi', 'InlinedApi', 'TrulyRandom'
    }

    dexOptions {
        incremental = true;
        preDexLibraries = false
        javaMaxHeapSize "4g"
    }
}

task findbugs(type: FindBugs) {
    ignoreFailures = true
    effort = "default"
    reportLevel = "medium"
    classes = files("$project.buildDir/intermediates/classes")

    // Use this only if you want exclude some errors
    excludeFilter = file("$rootProject.rootDir/findbugs/findbugs-exclude.xml")

    source = fileTree('src/main/java/')
    classpath = files()

    reports {
        xml.enabled = false
        // only one report can be enabled at a time
        html.enabled = !xml.isEnabled()
        //noinspection GroovyAssignabilityCheck
        xml {
            destination "$project.buildDir/findbugs/reports/findbugs-output.xml"
            withMessages = true
        }
        html {
            destination "$project.buildDir/findbugs/reports/findbugs-output.html"
        }
    }
}

task checkstyle(type: Checkstyle) {
    configFile file("$project.rootDir/checkstyle.xml")
    source 'src'
    include '**/*.java'
    classpath = files()
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    testCompile 'junit:junit:4.12'
    androidTestCompile 'com.android.support:support-annotations:23.3.0'
    androidTestCompile 'com.android.support.test:runner:0.4'
    androidTestCompile 'com.android.support.test:rules:0.4'

    compile 'com.android.support:appcompat-v7:23.3.0'
    compile 'com.android.support:design:23.3.0'

    freeCompile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.parse.bolts:bolts-android:1.4.0'
    compile 'com.parse:parse-android:1.13.0'
    //noinspection GradleDependency
    compile "com.google.android.gms:play-services:8.3.0"

    compile 'net.zetetic:android-database-sqlcipher:3.3.1-2'

    compile('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') {
        transitive = true;
    }

    compile 'com.android.support:multidex:1.0.1'
}
